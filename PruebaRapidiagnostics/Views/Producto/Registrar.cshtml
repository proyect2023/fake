@model PruebaRapidiagnostics.ApplicationCore.DTOs.Services.ProductoDto

@{
    ViewBag.Title = "Registrar";
}

@if (Model.Id > 0)
{
    <h2>Editar</h2>
}
else
{
    <h2>Crear</h2>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control decimal" } })
                @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control decimal" } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tipo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.Id > 0)
                {
                    <button type="submit" class="btn btn-success">Editar</button>
                }
                else
                {
                    <button type="submit" class="btn btn-success">Guardar</button>
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Atras", "Index")
</div>

@section Scripts {
    <script src="~/lib/sweetalert2/sweetalert2.all.min.js"></script>
    <script src="~/lib/jquery-maskmoney/jquery.maskMoney.min.js"></script>
    <script>
        $(document).ready(function () {
            $(".decimal").maskMoney();
        })
    </script>
    @if (TempData["Mensaje"] != null)
    {
        <script>
            Swal.fire({
                title: 'Exitoso',
                text: '@TempData["Mensaje"]'
            });
        </script>
    }
    @if (TempData["Error"] != null)
    {
        <script>
            Swal.fire({
                title: 'Exitoso',
                text: '@TempData["Error"]'
            });
        </script>
    }
}

